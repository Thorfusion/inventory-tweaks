buildscript {
    repositories {
        maven {
            name 'central'
            url 'https://maven.thorfusion.com/artifactory/central/'
        }
    }
    dependencies {
        classpath ('com.anatawa12.forge:ForgeGradle:1.2-1.0.+') {
            changing = true
        }
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:4.27.1"
    }
}

plugins {
    id 'java-library'
}

apply plugin: 'forge'
apply plugin: 'idea'
apply plugin: "com.jfrog.artifactory"
apply plugin: "maven-publish"
apply plugin: "maven"

repositories {
    maven {
        name 'central'
        url 'https://maven.thorfusion.com/artifactory/central/'
    }

}

// Define properties file
ext.configFile = file "build.properties"

configFile.withReader {
    // Load config. It shall from now be referenced as simply config or project.config
    def prop = new Properties()
    prop.load(it)
    project.ext.config = new ConfigSlurper().parse prop
}

version = "${config.minecraft_version}-${config.mod_version}"
group = "inventorytweaks" // No stupid URL conventions
archivesBaseName = "InventoryTweaks"
sourceCompatibility = 1.8
targetCompatibility = 1.8

minecraft {
    version = config.minecraft_version + "-" + config.forge_version
    replaceIn "invtweaks/forge/InvTweaksMod.java"
    replace "GRADLE_MODVERSION", config.mod_version
}





jar {
    manifest {
        attributes 'FMLCorePlugin': 'invtweaks.forge.asm.FMLPlugin', 'FMLCorePluginContainsFMLMod': 'true'
    }
}

task apiJar(type: Jar) {
    classifier = 'api'
    dependsOn processResources
    from sourceSets.main.allJava
    include 'invtweaks/api/**'
}

task deobfJar(type: Jar) {
    classifier = 'deobf'
    dependsOn classes
    from sourceSets.main.output
    manifest {
        attributes 'FMLCorePlugin': 'invtweaks.forge.asm.FMLPlugin', 'FMLCorePluginContainsFMLMod': 'true'
    }
}

processResources
{
    inputs.property "version", config.mod_version
    inputs.property "mcversion", config.minecraft_version

    from(sourceSets.main.resources.srcDirs) {
        exclude '**/*.png'
        exclude '**/*_at.cfg'

        expand 'version':config.mod_version, 'mcversion':config.minecraft_version
    }
    from(sourceSets.main.resources.srcDirs) {
        include '**/*.png'
        include '**/*_at.cfg'
    }
}

artifacts {
    archives apiJar
    archives deobfJar
}

artifactory {
    contextUrl = System.getenv("MAVEN_URL")
    publish {
        repository {
            repoKey = 'thorfusion'
            username = System.getenv("MAVEN_USERNAME")
            password = System.getenv("MAVEN_PASSWORD")
            maven = true
        }
        defaults {
            publications('mavenJava')
        }
        publishBuildInfo = false
        publishArtifacts = true
        publishPom = true
    }
    resolve {
        repository {
            repoKey = 'central'
            username = System.getenv("MAVEN_USERNAME")
            password = System.getenv("MAVEN_PASSWORD")
            maven = true

        }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = rootProject.name
            groupId = project.group
            version = project.version
            artifacts = [jar, apiJar, deobfJar]
            components.java.withVariantsFromConfiguration(configurations.runtimeElements) {
                skip()
            }
        }
    }
}
